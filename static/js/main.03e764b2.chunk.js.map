{"version":3,"sources":["logo.svg","Components/UserCard.js","Components/Repos.js","Context/UserContext.js","pages/Home.js","pages/Signin.js","pages/Signup.js","pages/PageNotFound.js","layout/Footer.js","layout/Header.js","App.js","Config/FirebaseConfig.js","serviceWorker.js","index.js"],"names":["module","exports","UserCard","user","Card","className","src","avatar_url","alt","CardBody","name","location","bio","blog","company","hireable","followers","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signin","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","Signup","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03e764b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\" ; \r\n\r\n\r\nimport {Card , CardBody} from \"reactstrap\" ; //\r\n\r\nconst UserCard = ({user}) => {\r\n    return (\r\n        <Card className=\"text-center mt-3 mb-4\">\r\n            <img src={user.avatar_url} className=\"ig-thumbnail\" alt=\"\"/>\r\n            <CardBody className=\"gradient\">\r\n                <div className=\"text-white\">{user.name}</div>\r\n                <div className=\"text-white\">{user.location}</div>\r\n                <div className=\"text-white\">{user.bio}</div>\r\n                <div className=\"text-white\">{user.blog}</div>\r\n                <div className=\"text-white\">{user.company}</div>\r\n                <div className=\"text-white\">Available for Hire: {user.hireable? 'YES' : 'NOPE'}</div>\r\n                <div className=\"text-white\">Followers: {user.followers}</div>\r\n\r\n                \r\n            </CardBody>\r\n        </Card>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default UserCard ; ","import React , {useState,useEffect} from 'react' ; \r\nimport Axios from \"axios\" ; //\r\nimport {ListGroup,ListGroupItem, Button} from \"reactstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst Repos = ({repos_url}) => {\r\n\r\n    const [repos,setRepos] = useState([])\r\n    const fetchRepos = async () => {\r\n        const {data} = await Axios.get(repos_url)\r\n        setRepos(data)\r\n    }\r\n    useEffect(()=>{\r\n        fetchRepos();\r\n    },[repos_url])\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <ListGroup>\r\n            {repos.map(repo=>(\r\n                <ListGroupItem key = {repo.id}>\r\n                    <div className=\"text-primary\">{repo.name}</div>\r\n                    <div className=\"text-secondary\">{repo.language}</div>\r\n                    <div className=\"text-info\">{repo.description}</div>\r\n                    <div className=\"text-info\">{repo.description}</div>\r\n                    \r\n\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Repos ; ","import {createContext} from \"react\" ;\r\n\r\nexport const UserContext = createContext() ","import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Repos from \"../Components/Repos\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../Context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Home = ()=>{\r\n    const context = useContext(UserContext)\r\n    const [query,setQuery]  = useState('')\r\n    const [user,setUser] = useState('')\r\n\r\n    const fetchDetails = async() => {\r\n        try {\r\n            const {data}=  await Axios.get(`https://api.github.com/users/${query}`)\r\n            setUser(data) \r\n            console.log(data)\r\n\r\n\r\n        }\r\n        catch(err) {\r\n            toast(\"Hey! Susmoy is not able to locate the User XD\" , {type:\"warning\"})\r\n        }\r\n    }\r\n\r\n    if(!context.user?.uid){\r\n        return <Redirect to=\"/signin\"/>\r\n    }\r\nreturn (\r\n    <Container>\r\n      <Row className=\" mt-3\">\r\n        <Col md=\"5\">\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={e =>setQuery(e.target.value)}\r\n              placeholder=\"Please provide the username\"\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button onClick = {fetchDetails}color=\"primary\">Fetch User</Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n          {user ? <UserCard user= {user}/>:null}\r\n        </Col>\r\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url}/>:null}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n\r\n} \r\n\r\nexport default Home ; ","import React ,{useContext,useState} from \"react\";\r\nimport {Container, Form , Button , FormGroup,Label,Col,Row,Input,Card,CardBody,CardFooter,CardHeader} from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport {UserContext} from \"../Context/UserContext\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {toast} from \"react-toastify\" ; \r\n\r\nconst Signin = () => {\r\n    const context = useContext(UserContext)\r\n    const [email,setEmail] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n\r\n    const handleSignIn = ()=> {\r\n        firebase.auth().signInWithEmailAndPassword(email,password).then(res=>{\r\n            console.log(res);\r\n            context.setUser({email:res.user.email, uid:res.user.uid})\r\n        }).catch(error=>{\r\n            console.log(error);\r\n            toast(error.message,{type:\"error\"})\r\n        })\r\n    }\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignIn();\r\n    }\r\n\r\n    if(context.user?.uid) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className='gradient text-white' >Login to Continue</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary' className='purple-gradient' onClick={()=>{toast(\"Welcome Back!\", {type:\"success\"})}}>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\n\r\nexport default Signin ; ","import React ,{useContext,useState} from \"react\";\r\nimport {Container, Form , Button , FormGroup,Label,Col,Row,Input,Card,CardBody,CardFooter,CardHeader} from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport {UserContext} from \"../Context/UserContext\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {toast} from \"react-toastify\" ; \r\nconst Signup = () => {\r\n    const context = useContext(UserContext)\r\n    const [email,setEmail] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n\r\n    const handleSignUp = ()=> {\r\n        firebase.auth().createUserWithEmailAndPassword(email,password).then(res=>{\r\n            console.log(res);\r\n\t\t\tcontext.setUser({email:res.user.email, uid:res.user.uid})\r\n\t\t\ttoast(\"Welcome to Susmoy's Github App!\" , {type:\"success\"})\r\n\t\t\ttoast(\"Enjoy the Power of React!\",{type:\"warning\"})\r\n        }).catch(error=>{\r\n            console.log(error);\r\n            toast(error.message,{type:\"warning\"})\r\n        })\r\n    }\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignUp();\r\n    }\r\n\r\n    if(context.user?.uid) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className='gradient text-white'>SignUp Here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary' className='purple-gradient' >\r\n\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\n\r\nexport default Signup ; ","import React from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <h1>404 Page doesn't exist</h1>\r\n    )\r\n}\r\n\r\n\r\nexport default PageNotFound; ","import React from \"react\" ; \r\nimport {Container} from \"reactstrap\" ; \r\n\r\n\r\nconst Footer = ()=> {\r\n    return (\r\n        <Container fluid tag= \"footer\" className=\"text-center bg-info text-white text-uppercase fixed-bottom p-3 gradient\">\r\n\r\n            SUSMOYOP'S GITHUB APP WITH FIREBASE\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer ; ","import React , {useState,useContext} from \"react\" ; \r\nimport { NavItem, NavbarBrand, NavbarText } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Collapse , \r\n    Navbar,  \r\n    NavbarToggler,\r\n    Nav ,  NavLink , NavText}  from \"reactstrap\" ; //\r\n\r\nimport {UserContext} from \"../Context/UserContext\" ;\r\n\r\nconst Header = ()=> {\r\n    const context = useContext(UserContext) ; //whatever the value available in user context is now stored in context\r\n    const [isOpen , setIsOpen] = useState(false);\r\n    const toggle = ()=> setIsOpen(!isOpen)\r\n    return (\r\n        <Navbar color=\"success\" className=\"gradient\" light expand=\"md\">\r\n            <NavbarBrand><Link to=\"/\" className=\"text-white\">SUSMOYOP'S GITHUB APP</Link></NavbarBrand>\r\n            <NavbarText className=\"text-white\">{context.user?.email ? context.user.email : \"\"}</NavbarText>\r\n            <NavbarToggler onClick={toggle}/>\r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"ml-auto\" navbar>{context.user ? (<NavItem>\r\n                        <NavLink className=\"text-white\" onClick={()=>{context.setUser(null)}}>\r\n                            Logout\r\n                        </NavLink>\r\n                    </NavItem>):(<><NavItem>\r\n                    <NavLink className=\"text-white\" tag={Link} to=\"/signup\">\r\n                            Signup\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                    <NavLink className=\"text-white\" tag={Link} to=\"/signin\">\r\n                            Signin\r\n                        </NavLink>\r\n                    </NavItem></>)}\r\n                    \r\n                    \r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header ; ","import React , {useState} from 'react';\nimport logo from './logo.svg';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './App.css';\nimport {BrowserRouter as Router , Switch , Route , Link} from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\" ; \nimport PageNotFound from \"./pages/PageNotFound\"\nimport { UserContext } from './Context/UserContext';\nimport Footer from \"./layout/Footer\"\nimport Header from \"./layout/Header\"\nimport FirebaseConfig from \"./Config/FirebaseConfig\"\n\n\n//init firebase \n\nfirebase.initializeApp(FirebaseConfig)\nconst App = ()=> {\n  const [user,setUser] = useState(null) ; \n  return (\n    <Router>\n      <ToastContainer/>\n      <UserContext.Provider value = {{user,setUser}}>\n      <Header/>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/signin\" component={Signin}/>\n        <Route exact path=\"/signup\" component={Signup}/>\n        <Route exact path=\"*\" component={PageNotFound}/>\n      </Switch>\n      <Footer/>\n\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","export default {\r\n    apiKey: \"AIzaSyDVzxHVvZwKrIYsVGi4_klR9QRd6WuEnR0\",\r\n    authDomain: \"mygitapp-a96ae.firebaseapp.com\",\r\n    databaseURL: \"https://mygitapp-a96ae.firebaseio.com\",\r\n    projectId: \"mygitapp-a96ae\",\r\n    storageBucket: \"mygitapp-a96ae.appspot.com\",\r\n    messagingSenderId: \"876334747896\",\r\n    appId: \"1:876334747896:web:5808e10f4fc4140e1beb0d\",\r\n    measurementId: \"G-LY79D4CC3R\"\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}